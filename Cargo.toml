[package]
name = "weaver"
version = "0.1.0"
authors = ["Laurent Querel <l.querel@f5.com>"]
edition = "2021"
repository = "https://github.com/open-telemetry/weaver"
description = "Manage semantic convention registry and telemetry schema workflows (OpenTelemetry Project)"
keywords = ["opentelemetry", "semconv", "schema", "registry", "generator"]
categories = ["command-line-utilities"]
license = "Apache-2.0"
readme = "README.md"
publish = false

# Workspace definition ========================================================
[workspace]
members = [
    "crates/*",
]

[workspace.package]
authors = ["Laurent Querel <l.querel@f5.com>"]
edition = "2021"
repository = "https://github.com/f5/otel-weaver"
license = "Apache-2.0"
publish = false
rust-version = "1.76"

[workspace.dependencies]
serde = { version = "1.0.197", features = ["derive"] }
serde_yaml = "0.9.32"
serde_json = "1.0.114"
thiserror = "1.0.58"
ureq = "2.9.6"
regex = "1.10.4"
rayon = "1.10.0"
ordered-float = { version = "4.2.0", features = ["serde"] }
walkdir = "2.5.0"
anyhow = "1.0.81"

# Features definition =========================================================
[features]
experimental = []

# Crate definitions ===========================================================
[[bin]]
bench = false
path = "src/main.rs"
name = "weaver"

[dependencies]
# local crates dependencies
weaver_logger = { path = "crates/weaver_logger" }
weaver_resolver = { path = "crates/weaver_resolver" }
weaver_template = { path = "crates/weaver_template" }
weaver_semconv = { path = "crates/weaver_semconv" }
weaver_resolved_schema = { path = "crates/weaver_resolved_schema" }
weaver_semconv_gen = { path = "crates/weaver_semconv_gen" }
weaver_schema = { path = "crates/weaver_schema" }
weaver_cache = { path = "crates/weaver_cache" }
weaver_forge = { path = "crates/weaver_forge" }

clap = { version = "4.5.3", features = ["derive"] }
crossterm = "0.27.0"
ratatui = "0.26.1"
tui-textarea = "0.4.0"
tantivy = "0.21.1"

# workspace dependencies
serde.workspace = true
serde_yaml.workspace = true
serde_json.workspace = true

[package.metadata.cargo-machete]
# force cargo machete to ignore the following crates
ignored = ["serde"]

[profile.release]
lto = true
strip = true
panic = "abort"

[workspace.lints.rust]
rust_2018_idioms = "warn"
unused_lifetimes = "warn"
# unreachable_pub = "warn"
semicolon_in_expressions_from_macros = "warn"
missing_docs = "deny"
unstable_features = "deny"
unused_import_braces = "deny"
unused_qualifications = "deny"
unused_results = "deny"
unused_extern_crates = "deny"

[lints]
workspace = true

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
cargo = { level = "deny", priority = -1 }
unwrap_used = "deny"
print_stdout = "deny"
print_stderr = "deny"
multiple_crate_versions = "allow"
# this lint shows places where you could add the #must_use attribute.
must-use-candidate = "warn"

complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
restriction = { level = "allow", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

too_many_arguments = "allow"
type_complexity = "allow"
wrong_self_convention = "allow"
rc_buffer = "warn"
str_to_string = "warn"
